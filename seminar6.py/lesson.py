# напишите программу, которая сортирует элементы массива по возрастанию
# последней цифры десятичной записи чисел
# 219 234 890 81 73 96
# a = [219, 234, 890, 81, 73, 96]
# r = sorted(a, key=lambda x: x % 10)
# print(r)

# Напишите программу, которая сортирует натуральные числа в массиве по
# убыванию суммы цифр десятичной записи числа
# При равенстве сумм цифр числа должны сохранить исходный порядок.
# a = [219, 234, 890, 81, 73, 96]


# def summnum(x):
#     summ = 0
#     while x != 0:
#         summ += x % 10
#         x //= 10
#     return summ


# r = sorted(a, key=summnum, reverse=True)
# print(r)


# Напишите программу, которая сортирует элементы массива
# с четнвми и нечетными значениями.
# Все элементы с нечетнвми нужно отсортировать по возрастанию,
# а элементы с четнвми значениями по убыванию.
# при этом элементы каждой группы (как четные. так и нечетные)
#  должны занимать те же позиции в массиве, что и до сортировки
a = [3, 1, 2, 5, 4, 6]
print(a)
h = [1 if i % 2 == 0 else 0 for i in a]
print(h)
even = [i for i in a if i % 2 == 0]
odd = [i for i in a if i % 2 == 1]
even.sort(reverse=True)  # сортировка четных по возрастанию
odd.sort()  # сортировка нечетных убыванию
print(even)
print(odd)
for indx, value in enumerate(h):
    if value == 1:
        h[indx] = even.pop(0)
    else:
        h[indx] = odd.pop(0)
print(h)
